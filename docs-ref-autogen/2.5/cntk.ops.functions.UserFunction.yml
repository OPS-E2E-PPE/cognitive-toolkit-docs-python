### YamlMime:UniversalReference
api_name: []
items:
- children:
  - cntk.ops.functions.UserFunction.clone
  - cntk.ops.functions.UserFunction.deserialize
  - cntk.ops.functions.UserFunction.infer_outputs
  - cntk.ops.functions.UserFunction.op_name
  - cntk.ops.functions.UserFunction.serialize
  class: cntk.ops.functions.UserFunction
  fullName: cntk.ops.functions.UserFunction
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: cntk.cntk_py.IDictionarySerializable
      type: cntk.cntk_py.Function
    type: cntk.ops.functions.Function
  langs:
  - python
  module: cntk.ops.functions
  name: UserFunction
  source:
    id: UserFunction
    path: bindings/python/cntk\ops\functions.py
    remote:
      branch: release/2.5
      path: bindings/python/cntk\ops\functions.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 1696
  summary: 'Base class of all user extension functions.


    If it has only one output, one can invoke Variable methods on it, which it

    will relay to its only output.






    '
  syntax:
    content: UserFunction(inputs, as_numpy=True, attributes=None, name='')
    parameters:
    - description: 'inputs to this function

        '
      id: inputs
      type:
      - list
    - description: 'whether the data should be automatically

        converted from and to NumPy. Defaults to True. Specifying this as

        *False* passes the data as CNTK Value objects.

        '
      id: as_numpy
      type:
      - bool, optional
    - description: 'name of this function

        '
      id: name
      type:
      - str
  type: class
  uid: cntk.ops.functions.UserFunction
- class: cntk.ops.functions.UserFunction
  fullName: cntk.ops.functions.UserFunction.clone
  langs:
  - python
  module: cntk.ops.functions
  name: clone
  source:
    id: clone
    path: bindings/python/cntk\ops\functions.py
    remote:
      branch: release/2.5
      path: bindings/python/cntk\ops\functions.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 1857
  summary: 'Creates a clone of this user-defined function.


    It assumes that the constructor signature of the user''s implementation

    of the user function takes the inputs as individual arguments followed

    by the operator name. If the signature is different, then this method

    needs to be overriden.

    '
  syntax:
    content: clone(cloned_inputs)
    parameters:
    - description: 'list of cloned inputs to the new user-defined

        Function clone to be created.

        '
      id: cloned_inputs
    return:
      description: 'A cloned instance of this user-defined function.

        '
  type: method
  uid: cntk.ops.functions.UserFunction.clone
- class: cntk.ops.functions.UserFunction
  fullName: cntk.ops.functions.UserFunction.deserialize
  langs:
  - python
  module: cntk.ops.functions
  name: deserialize
  source:
    id: deserialize
    path: bindings/python/cntk\ops\functions.py
    remote:
      branch: release/2.5
      path: bindings/python/cntk\ops\functions.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 1879
  summary: 'A stub deserialize method for illustration purposes. User-defined functions

    need to provide their own implementation in order for CNTK to be able to

    reconstruct them when loading a model.

    '
  syntax:
    content: deserialize(inputs, name, state)
    parameters:
    - description: 'a list of inputs to the function

        '
      id: inputs
      type:
      - list
    - description: 'name of this function

        '
      id: name
      type:
      - str
    - description: 'a state dictionary generated by the corresponding

        @cntk.ops.functions.UserFunction.serialize method.

        '
      id: state
      type:
      - dict
    return:
      description: 'An instance of the user-defined function.

        '
  type: method
  uid: cntk.ops.functions.UserFunction.deserialize
- class: cntk.ops.functions.UserFunction
  fullName: cntk.ops.functions.UserFunction.infer_outputs
  langs:
  - python
  module: cntk.ops.functions
  name: infer_outputs
  source:
    id: infer_outputs
    path: bindings/python/cntk\ops\functions.py
    remote:
      branch: release/2.5
      path: bindings/python/cntk\ops\functions.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 1847
  summary: 'Returns a list of all output variables this user-defined function

    outputs.


    Output variables are created by

    @cntk.ops.output_variable.

    '
  syntax:
    content: infer_outputs()
    parameters:
    - id: self
  type: method
  uid: cntk.ops.functions.UserFunction.infer_outputs
- class: cntk.ops.functions.UserFunction
  fullName: cntk.ops.functions.UserFunction.op_name
  langs:
  - python
  module: cntk.ops.functions
  name: op_name
  source:
    id: op_name
    path: null
    remote:
      branch: release/2.5
      path: null
      repo: https://github.com/Microsoft/CNTK.git
    startLine: null
  summary: 'Unique operation name of this user-defined function.

    This property defaults to ''<module>.<class>'', but can be overridden.

    '
  syntax: {}
  type: attribute
  uid: cntk.ops.functions.UserFunction.op_name
- class: cntk.ops.functions.UserFunction
  fullName: cntk.ops.functions.UserFunction.serialize
  langs:
  - python
  module: cntk.ops.functions
  name: serialize
  source:
    id: serialize
    path: bindings/python/cntk\ops\functions.py
    remote:
      branch: release/2.5
      path: bindings/python/cntk\ops\functions.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 1905
  summary: 'Generates a dictionary that captures the state of this user-defined function.


    This method must be overridden, if a user function has any state that needs

    to be preserved in the model dictionary.

    '
  syntax:
    content: serialize()
    parameters:
    - id: self
  type: method
  uid: cntk.ops.functions.UserFunction.serialize
references:
- fullName: cntk.ops.functions.UserFunction.clone
  isExternal: false
  name: clone
  parent: cntk.ops.functions.UserFunction
  uid: cntk.ops.functions.UserFunction.clone
- fullName: cntk.ops.functions.UserFunction.deserialize
  isExternal: false
  name: deserialize
  parent: cntk.ops.functions.UserFunction
  uid: cntk.ops.functions.UserFunction.deserialize
- fullName: cntk.ops.functions.UserFunction.infer_outputs
  isExternal: false
  name: infer_outputs
  parent: cntk.ops.functions.UserFunction
  uid: cntk.ops.functions.UserFunction.infer_outputs
- fullName: cntk.ops.functions.UserFunction.op_name
  isExternal: false
  name: op_name
  parent: cntk.ops.functions.UserFunction
  uid: cntk.ops.functions.UserFunction.op_name
- fullName: cntk.ops.functions.UserFunction.serialize
  isExternal: false
  name: serialize
  parent: cntk.ops.functions.UserFunction
  uid: cntk.ops.functions.UserFunction.serialize
- fullName: bool, optional
  name: bool, optional
  spec.python:
  - fullName: bool
    name: bool
    uid: bool
  - fullName: ', '
    name: ', '
  - fullName: optional
    name: optional
    uid: optional
  uid: bool, optional
